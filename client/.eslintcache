[{"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/index.tsx":"1","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/reportWebVitals.ts":"2","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/App.tsx":"3","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Posts/Posts.tsx":"4","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Form/Form.tsx":"5","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/styles.ts":"6","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Form/styles.ts":"7","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Posts/styles.ts":"8","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/utils/api/api-client.ts":"9","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Post/Post.tsx":"10","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Post/styles.ts":"11"},{"size":680,"mtime":1609017193151,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608822991171,"results":"14","hashOfConfig":"13"},{"size":1229,"mtime":1609093559618,"results":"15","hashOfConfig":"13"},{"size":1051,"mtime":1609091055572,"results":"16","hashOfConfig":"13"},{"size":4387,"mtime":1609093666585,"results":"17","hashOfConfig":"13"},{"size":630,"mtime":1609093607475,"results":"18","hashOfConfig":"13"},{"size":425,"mtime":1608832889693,"results":"19","hashOfConfig":"13"},{"size":266,"mtime":1608832930996,"results":"20","hashOfConfig":"13"},{"size":1556,"mtime":1609027108730,"results":"21","hashOfConfig":"13"},{"size":3147,"mtime":1609091597416,"results":"22","hashOfConfig":"13"},{"size":966,"mtime":1609091572309,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7i9w12",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/index.tsx",[],["49","50"],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/reportWebVitals.ts",[],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/App.tsx",["51"],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Posts/Posts.tsx",["52","53"],"import { CircularProgress, Grid } from \"@material-ui/core\";\nimport React, { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { API_URL, fetchPosts } from \"../../utils/api/api-client\";\nimport { Post as IPost } from \"../../utils/types/posts\";\nimport Post from \"../Post/Post\";\nimport useStyles from \"./styles\";\n\ninterface PostsProps {\n  setCurrentId: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\nexport const Posts: FC<PostsProps> = ({ setCurrentId }) => {\n  const classes = useStyles();\n  const { data: posts, status } = useQuery(\"posts\", fetchPosts);\n\n  return (\n    <>\n      {status === \"loading\" && <CircularProgress />}\n\n      {status === \"success\" && (\n        <Grid\n          className={classes.mainContainer}\n          container\n          alignItems='stretch'\n          spacing={3}\n        >\n          {posts!.map((post) => (\n            <Grid key={post._id} item xs={12} sm={6}>\n              <Post post={post} setCurrentId={setCurrentId} />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n    </>\n  );\n};\n","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Form/Form.tsx",["54"],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/styles.ts",[],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Form/styles.ts",[],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Posts/styles.ts",[],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/utils/api/api-client.ts",["55"],"import { Post, PostFormData, UpdatePostData } from \"../types/posts\";\n\nexport const API_URL = \"http://localhost:5000/posts\";\n\n// export const fetchPosts = () => axios.get(url);\n// export const createPost = () => axios.post(url, newPost);\n\nexport const createPost = async (newPostData: PostFormData) => {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newPostData),\n  }).then((res) => res.json());\n\n  return res as Post[];\n};\n\nexport const updatePost = async (post: UpdatePostData) => {\n  const res = await fetch(`${API_URL}/${post.id}`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(post.postData),\n  }).then((res) => res.json());\n\n  return res as Post;\n};\n\nexport const fetchPosts = async () => {\n  const res = await fetch(API_URL).then((res) => res.json());\n  return res as Post[];\n};\n\nexport const deletePost = async (id: string) => {\n  const res = await fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n};\n\nexport const likePost = async (id: string) => {\n  const res = await fetch(`${API_URL}/${id}/likePost`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n\n  return res as Post;\n};\n","/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Post/Post.tsx",[],"/Users/teoliver/Documents/Web_Projects_Docs/Portifolio/book_highlight/client/src/components/Post/styles.ts",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":21,"nodeType":"62","messageId":"63","endLine":2,"endColumn":27},{"ruleId":"60","severity":1,"message":"64","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":17},{"ruleId":"60","severity":1,"message":"65","line":5,"column":18,"nodeType":"62","messageId":"63","endLine":5,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":41,"column":6,"nodeType":"68","endLine":41,"endColumn":30,"suggestions":"69"},{"ruleId":"60","severity":1,"message":"70","line":40,"column":9,"nodeType":"62","messageId":"63","endLine":40,"endColumn":12},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'API_URL' is defined but never used.","'IPost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'previousPosts'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [currentId, previousPosts, queryClient]",{"range":"76","text":"77"},[1447,1471],"[currentId, previousPosts, queryClient]"]